// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Monitoria.Infra.Data.Contexts;

namespace Monitoria.Infra.Data.Migrations.Registration
{
    [DbContext(typeof(RegistrationContext))]
    partial class RegistrationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Registration")
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Monitoria.Domain.Registration.Entities.Animal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Age")
                        .HasColumnName("Age");

                    b.Property<Guid>("CustomerId");

                    b.Property<bool>("IsAlive")
                        .HasColumnName("IsAlive");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasMaxLength(40);

                    b.Property<int>("Specie")
                        .HasColumnName("Specie");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Animal");
                });

            modelBuilder.Entity("Monitoria.Domain.Registration.Entities.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Id");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("Monitoria.Domain.Registration.Entities.Animal", b =>
                {
                    b.HasOne("Monitoria.Domain.Registration.Entities.Customer", "Customer")
                        .WithMany("Animails")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Monitoria.Domain.Registration.Entities.Customer", b =>
                {
                    b.OwnsOne("Monitoria.Domain.Shared.ValueObjects.Address", "Address", b1 =>
                        {
                            b1.Property<Guid>("CustomerId");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasColumnName("AddressCity")
                                .HasMaxLength(50);

                            b1.Property<string>("Country")
                                .IsRequired()
                                .HasColumnName("AddressCountry")
                                .HasMaxLength(50);

                            b1.Property<string>("Neighborhood")
                                .IsRequired()
                                .HasColumnName("AddressNeighborhood")
                                .HasMaxLength(50);

                            b1.Property<string>("Number")
                                .IsRequired()
                                .HasColumnName("AddressNumber");

                            b1.Property<string>("State")
                                .IsRequired()
                                .HasColumnName("AddressState")
                                .HasMaxLength(50);

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasColumnName("AddressStreet")
                                .HasMaxLength(50);

                            b1.Property<string>("ZipCode")
                                .IsRequired()
                                .HasColumnName("AddressZipCode")
                                .HasMaxLength(8);

                            b1.HasKey("CustomerId");

                            b1.ToTable("Customer","Registration");

                            b1.HasOne("Monitoria.Domain.Registration.Entities.Customer")
                                .WithOne("Address")
                                .HasForeignKey("Monitoria.Domain.Shared.ValueObjects.Address", "CustomerId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("Monitoria.Domain.Shared.ValueObjects.Document", "Document", b1 =>
                        {
                            b1.Property<Guid>("CustomerId");

                            b1.Property<string>("Number")
                                .IsRequired()
                                .HasColumnName("DocNumber")
                                .HasMaxLength(50);

                            b1.Property<int>("Type")
                                .HasColumnName("DocType");

                            b1.HasKey("CustomerId");

                            b1.ToTable("Customer","Registration");

                            b1.HasOne("Monitoria.Domain.Registration.Entities.Customer")
                                .WithOne("Document")
                                .HasForeignKey("Monitoria.Domain.Shared.ValueObjects.Document", "CustomerId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("Monitoria.Domain.Shared.ValueObjects.Email", "Email", b1 =>
                        {
                            b1.Property<Guid>("CustomerId");

                            b1.Property<string>("Address")
                                .IsRequired()
                                .HasColumnName("EmailAddress")
                                .HasMaxLength(60);

                            b1.HasKey("CustomerId");

                            b1.ToTable("Customer","Registration");

                            b1.HasOne("Monitoria.Domain.Registration.Entities.Customer")
                                .WithOne("Email")
                                .HasForeignKey("Monitoria.Domain.Shared.ValueObjects.Email", "CustomerId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("Monitoria.Domain.Shared.ValueObjects.Name", "Name", b1 =>
                        {
                            b1.Property<Guid>("CustomerId");

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasColumnName("FirstName")
                                .HasMaxLength(50);

                            b1.Property<string>("LastName")
                                .IsRequired()
                                .HasColumnName("LastName")
                                .HasMaxLength(50);

                            b1.HasKey("CustomerId");

                            b1.ToTable("Customer","Registration");

                            b1.HasOne("Monitoria.Domain.Registration.Entities.Customer")
                                .WithOne("Name")
                                .HasForeignKey("Monitoria.Domain.Shared.ValueObjects.Name", "CustomerId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
